type: "orchestration"
version: "1.0"
pipeline:
  components:
    Start:
      type: "start"
      transitions:
        unconditional:
        - "Fixed Iterator"
        - "Create_s3_src_customer_acc"
        - "Create_s3_src_orders"
      parameters:
        componentName: "Start"
    load customers:
      type: "database-query"
      parameters:
        componentName: "load customers"
        basicAdvancedMode: "Advanced"
        databaseType: "MariaDB"
        connectionUrl: "jdbc:mariadb://mat-trn-src.co4vks4ks8wo.eu-west-1.rds.amazonaws.com:3306/greenwave"
        username: "greenwave_user"
        password: "RDS-database-password"
        connectionOptions:
        sqlQuery: "SELECT * FROM ${pipeline_table_name};"
        type: "Standard"
        primaryKeys:
        warehouse1: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "rds_source_${pipeline_table_name}"
        stage1: "[Custom]"
        stagePlatform: "Snowflake Managed"
        loadOptions:
    Create_s3_src_customer_acc:
      type: "create-table"
      transitions:
        success:
        - "S3 Load src_customer_account"
      parameters:
        componentName: "Create_s3_src_customer_acc"
        createReplace: "Create if not exists"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        newTableName: "s3_src_customer_accounts"
        tableType: "Permanent"
        columns:
        - - "DataValue"
          - "VARIANT"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
        defaultDdlCollation:
        primaryKeys:
        clusteringKeys:
        dataRetentionTimeInDays:
        comment:
    S3 Load src_customer_account:
      type: "s3-load"
      transitions:
        success:
        - "And"
      parameters:
        componentName: "S3 Load src_customer_account"
        stage: "[Custom]"
        authentication: "Credentials"
        s3ObjectPrefix: "s3://public-online-mtln-training-s3-greenwave/"
        pattern: "customer_accounts.json"
        encryption: "None"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "s3_src_customer_accounts"
        loadColumns:
        - "DataValue"
        format: "[Custom]"
        fileType: "JSON"
        compression: "AUTO"
        enableOctal: "False"
        allowDuplicates: "False"
        stripOuterArray: "False"
        stripNullValues: "False"
        ignoreUtf8Errors: "False"
        nullIf1:
        trimSpace1: "False"
        onError: "Abort Statement"
        sizeLimitB:
        purgeFiles: "False"
        matchByColumnName: "None"
        truncateColumns: "False"
        forceLoad: "False"
    Create_s3_src_orders:
      type: "create-table"
      transitions:
        success:
        - "S3 Load"
      parameters:
        componentName: "Create_s3_src_orders"
        createReplace: "Create if not exists"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        newTableName: "s3_src_orders"
        tableType: "Permanent"
        columns:
        - - "rid"
          - "NUMBER"
          - "5"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "customer_rid"
          - "NUMBER"
          - "5"
          - "0"
          - ""
          - "No"
          - "No"
          - ""
        - - "order_date"
          - "TIMESTAMP"
          - ""
          - ""
          - ""
          - "No"
          - "No"
          - ""
        defaultDdlCollation:
        primaryKeys:
        clusteringKeys:
        dataRetentionTimeInDays:
        comment:
    S3 Load:
      type: "s3-load"
      transitions:
        success:
        - "And"
      parameters:
        componentName: "S3 Load"
        stage: "[Custom]"
        authentication: "Credentials"
        s3ObjectPrefix: "s3://public-online-mtln-training-s3-greenwave/"
        pattern: "orders_s3.*"
        encryption: "None"
        warehouse: "[Environment Default]"
        database: "[Environment Default]"
        schema: "[Environment Default]"
        targetTable: "s3_src_orders"
        loadColumns:
        format: "[Custom]"
        fileType: "CSV"
        compression: "AUTO"
        recordDelimiter: "\\n"
        fieldDelimiter: ","
        skipHeader: "1"
        skipBlankLines: "False"
        dateFormat:
        timeFormat:
        timestampFormat:
        escape:
        escapeUnenclosedField:
        trimSpace: "False"
        fieldOptionallyEnclosed:
        nullIf:
        errorOnColumnCountMismatch: "False"
        emptyFieldAsNull: "True"
        replaceInvalidCharacters: "False"
        encodingType:
        onError: "Abort Statement"
        sizeLimitB:
        purgeFiles: "False"
        truncateColumns: "False"
        forceLoad: "False"
    Fixed Iterator:
      type: "fixed-iterator"
      transitions:
        success:
        - "And"
      iterationTarget: "load customers"
      parameters:
        componentName: "Fixed Iterator"
        concurrency: "Sequential"
        variablesToIterate:
        - "pipeline_table_name"
        iterationValues:
        - - "customers"
        - - "order_items"
        breakOnFailure: "No"
    And:
      type: "and"
      transitions:
        unconditional:
        - "End Success"
      parameters:
        componentName: "And"
    End Success:
      type: "end-success"
      parameters:
        componentName: "End Success"
  variables:
    pipeline_table_name:
      metadata:
        type: "TEXT"
        description: ""
        scope: "COPIED"
        visibility: "PUBLIC"
      defaultValue: ""
design:
  components:
    Start:
      position:
        x: 0
        "y": 0
      tempMetlId: 1
    load customers:
      position:
        x: 110
        "y": -130
      tempMetlId: 3
    Create_s3_src_customer_acc:
      position:
        x: 120
        "y": 120
      tempMetlId: 4
    S3 Load src_customer_account:
      position:
        x: 240
        "y": 120
      tempMetlId: 5
    Create_s3_src_orders:
      position:
        x: 120
        "y": 290
      tempMetlId: 6
    S3 Load:
      position:
        x: 240
        "y": 290
      tempMetlId: 7
    Fixed Iterator:
      position:
        x: 110
        "y": -130
      tempMetlId: 8
    And:
      position:
        x: 460
        "y": 60
      tempMetlId: 10
    End Success:
      position:
        x: 590
        "y": 60
      tempMetlId: 13
